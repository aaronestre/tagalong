{
    "sourceFile": "src/components/pages/chat/MarkdonRenderer.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1738392624771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1738392624771,
            "name": "Commit-0",
            "content": "\r\nimport React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport './MarkdownRenderer.css';\r\n\r\nfunction MarkdownRenderer({ message, type }) {\r\n  const [displayText, setDisplayText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n    let plainText = extractPlainText(message);\r\n    \r\n    setDisplayText(\"\");\r\n\r\n    if (type === \"bot\") {\r\n      const delay = 20;\r\n      const intervalId = setInterval(() => {\r\n        if (index < plainText.length) {\r\n          setDisplayText((prevText) => prevText + plainText[index]);\r\n          index++;\r\n        } else {\r\n          clearInterval(intervalId);\r\n        }\r\n      }, delay);\r\n\r\n      return () => clearInterval(intervalId);\r\n    } else {\r\n      setDisplayText(message);\r\n    }\r\n  }, [message, type]);\r\n\r\n  const extractPlainText = (markdown) => {\r\n    return markdown.replace(/(\\*\\*|__|\\*|_|~~|`|>|#|\\[|\\]|\\(|\\))/g, \"\");\r\n  };\r\n\r\n  return (\r\n    <ReactMarkdown className=\"markdown\" remarkPlugins={[remarkGfm]}>\r\n      {message.slice(0, displayText.length)}\r\n    </ReactMarkdown>\r\n  );\r\n}\r\n\r\nexport default MarkdownRenderer;\r\n"
        }
    ]
}