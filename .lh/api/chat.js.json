{
    "sourceFile": "api/chat.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1738398390385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738398431972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,9 @@\n         content: content,\r\n       },\r\n     ],\r\n     model: \"llama-3.3-70b-versatile\",\r\n-    temperature: 0.8,\r\n-    top_p: 0.9,\r\n+    temperature: 1.2,\r\n   });\r\n }\r\n \r\n export default async function handler(req, res) {\r\n"
                },
                {
                    "date": 1738399136634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,8 @@\n         const chatCompletion = await getGroqChatCompletion(content);\r\n         return res.json({ message: chatCompletion.choices[0]?.message?.content || \"No response\" });\r\n     } catch (error) {\r\n         console.error('Error getting Groq completion:', error);\r\n-        res.status(500).send({ error: 'Failed to get Groq completion' });\r\n+        res.status(500).send({ error: 'Failed to get Groq completion' + error});\r\n     }\r\n     \r\n   }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738445629466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n       },\r\n     ],\r\n     model: \"llama-3.3-70b-versatile\",\r\n     temperature: 1.2,\r\n+    stream: true\r\n   });\r\n }\r\n \r\n export default async function handler(req, res) {\r\n"
                },
                {
                    "date": 1738445699818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n       },\r\n     ],\r\n     model: \"llama-3.3-70b-versatile\",\r\n     temperature: 1.2,\r\n-    stream: true\r\n+    stream: True\r\n   });\r\n }\r\n \r\n export default async function handler(req, res) {\r\n"
                },
                {
                    "date": 1738445733101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n       },\r\n     ],\r\n     model: \"llama-3.3-70b-versatile\",\r\n     temperature: 1.2,\r\n-    stream: True\r\n+    stream: true\r\n   });\r\n }\r\n \r\n export default async function handler(req, res) {\r\n"
                },
                {
                    "date": 1738445944047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n       },\r\n     ],\r\n     model: \"llama-3.3-70b-versatile\",\r\n     temperature: 1.2,\r\n-    stream: true\r\n+    stream: false\r\n   });\r\n }\r\n \r\n export default async function handler(req, res) {\r\n"
                },
                {
                    "date": 1738460756068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import Groq from \"groq-sdk\";\r\n+const groq = new Groq({ apiKey: process.env.GROQ_API_KEY });\r\n+\r\n+export async function getGroqChatCompletion(content) {\r\n+  return groq.chat.completions.create({\r\n+    messages: [\r\n+      {\r\n+        role: \"user\",\r\n+        content: content,\r\n+      },\r\n+    ],\r\n+    model: \"llama-3.3-70b-versatile\",\r\n+    temperature: 1.2,\r\n+    top_p: 1,\r\n+  });\r\n+}\r\n+\r\n+export default async function handler(req, res) {\r\n+    try {\r\n+        const { content } = req.body;\r\n+        const chatCompletion = await getGroqChatCompletion(content);\r\n+        return res.json({ message: chatCompletion.choices[0]?.message?.content || \"No response\" });\r\n+    } catch (error) {\r\n+        console.error('Error getting Groq completion:', error);\r\n+        res.status(500).send({ error: 'Failed to get Groq completion' + error});\r\n+    }\r\n+    \r\n+  }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1738398390385,
            "name": "Commit-0",
            "content": "import Groq from \"groq-sdk\";\r\nconst groq = new Groq({ apiKey: process.env.GROQ_API_KEY });\r\n\r\nexport async function getGroqChatCompletion(content) {\r\n  return groq.chat.completions.create({\r\n    messages: [\r\n      {\r\n        role: \"user\",\r\n        content: content,\r\n      },\r\n    ],\r\n    model: \"llama-3.3-70b-versatile\",\r\n    temperature: 0.8,\r\n    top_p: 0.9,\r\n  });\r\n}\r\n\r\nexport default async function handler(req, res) {\r\n    try {\r\n        const { content } = req.body;\r\n        const chatCompletion = await getGroqChatCompletion(content);\r\n        return res.json({ message: chatCompletion.choices[0]?.message?.content || \"No response\" });\r\n    } catch (error) {\r\n        console.error('Error getting Groq completion:', error);\r\n        res.status(500).send({ error: 'Failed to get Groq completion' });\r\n    }\r\n    \r\n  }"
        }
    ]
}